version: '3.8'

services:

  product-api:
    image: lingatsu/product-api:latest
    container_name: "productapi"
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app_network

  user-api:
    image: leotepedelen/clients:latest  # Ton image pour l'API User
    ports:
      - "8081:8081"  # Port différent pour éviter les conflits
    # environment:
    #   - MONGO_URI=mongodb://mongo:27017
    depends_on:
      - postgres
      # - rabbitmq
    networks:
      - app_network

  order-api:
    image: stevendella/commands:latest  # Ton image pour l'API Order
    ports:
      - "8083:8083"  # Port différent pour éviter les conflits
    env_file:
      - .env
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    depends_on:
      - mariadb
      - rabbitmq
    networks:
      - app_network

  mongo:
    image: mongo
    container_name: "mongodb"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - 27017:27017
    networks:
      - app_network
    volumes:
      - ./mongodb_data:/data/db # pose probleme actuellement

  postgres:
    image: postgres:15
    container_name: test_postgres
    restart: always
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d testdb"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - app_network

  mariadb:
    image: mariadb:latest
    container_name: "mariadb"
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: commandedb
      MYSQL_USER: ${MARIADB_USER} #user
      MYSQL_PASSWORD: ${MARIADB_PASSWORD} #mypassword
    ports:
      - "3308:3306"  # Port différent pour éviter les conflits avec MySQL
    networks:
      - app_network
    volumes:
      - mariadb_data:/var/lib/mysql

  rabbitmq:
    image: "rabbitmq:management"
    container_name: "rabbitmq"
    restart: always
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
     - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network  

volumes:
  mongodb_data:
  postgres_data:
  mariadb_data:
  rabbitmq_data:

networks:
  app_network:
    name: app_network
    driver: bridge
